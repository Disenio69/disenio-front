---
import DashboardLayout from '../layouts/Dashboard-Layout.astro';
---

<DashboardLayout title="Gestión de usuarios" path='Gestion de usuarios' pageTitle=' Gestión de usuarios'>
      <a class="rounded-3xl bg-blue-700 px-10 py-1.5 text-white text-sm ml-10 mr-0" href="/agregar-usuario">Agregar usuario</a>
            <!------------------------TABLE-------------------- -->
            <!------------------------TABLE-------------------- -->
          <div id="mainDiv" class="mt-5 pb-5">
            <div class="xl:w-full px-10">
              <div class="retive flex flex-col min-w-0 break-words bg-white w-full shadow-lg rounded mb-5">
                <div class="rounded-t mb-0 px-4 py-3 border-0">
                  <div class="flex flex-wrap items-center">
                    <div class="relative w-full px-2 flex-grow flex-1">
                      <h3 class="font-semibold text-base text-blueGray-700">Lista de usuarios</h3>
                    </div>
                    <div class="relative flex-grow flex-1 sm:text-right">
                      <input class="border-2 border-black text-black text-xs font-bold px-7 py-1 rounded-full" type="text" placeholder="Buscar">
                      <i class="relative md:visible invisible top-0.5 right-48 fa-solid fa-magnifying-glass" style="color: #000000;"></i>
                    </div>
                  </div>
                </div>
            
                <div class="block w-full overflow-x-auto">
                  <table class="items-center bg-transparent w-full border-collapse ">
                    <thead>
                      <tr>
                        <th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left">DNI</th>
                        <th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left">Nombre y apellido</th>
                        <th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left">Tipo</th>
                        <th class="px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left">Opciones</th>
                      </tr>
                    </thead>
            
                    <tbody id="tbody">
                    </tbody>
                  </table>
                </div>
              </div>
              <div class="flex flex-col items-center">
                <!-- Help text -->
                <span class="text-sm text-gray-700 dark:text-gray-400">
                    Mostrando <span class="font-semibold text-gray-900 dark:text-white" id="paginationStart"></span> de <span class="font-semibold text-gray-900 dark:text-white" id="paginationEnd"></span> de <span class="font-semibold text-gray-900 dark:text-white" id="totalPagination"></span> entradas
                </span>
                <div class="inline-flex mt-2 xs:mt-0">
                  <!-- Buttons -->
                  <button id="previousPage" class="flex items-center justify-center px-3 h-8 text-sm font-medium text-white bg-gray-800 rounded-s hover:bg-gray-900">
                      <svg class="w-3.5 h-3.5 me-2 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5H1m0 0 4 4M1 5l4-4"/>
                      </svg>
                      Anterior
                  </button>
                  <button id="nextPage" class="flex items-center justify-center px-3 h-8 text-sm font-medium text-white bg-gray-800 border-0 border-s border-gray-700 rounded-e hover:bg-gray-900 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
                      Siguiente
                      <svg class="w-3.5 h-3.5 ms-2 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
                      <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9"/>
                    </svg>
                  </button>
                </div>
              </div>
          </div>
</DashboardLayout>

<style>
  .disable-button{
    color: gray;
  }
</style>

<script>
  //@ts-nocheck 
  let data = null
  const limitcolums = 5
  const pag = 0
  document.querySelector('#nextPage')?.addEventListener('click',nexPage)
  document.querySelector('#previousPage')?.addEventListener('click',previousPage)

  document.querySelector('#tbody').addEventListener('click', async function(e) {
  if (e.target && e.target.id.startsWith('MoreInfo')) {
    data = await fetchData()
    const focusDataElement = parseInt(e.target.parentElement.parentElement.parentElement.firstElementChild.innerHTML) -1 //Comprobar esto luego ya que saco el "dni" del html y eso uso para mostrar los datos
    const div = document.createElement('DIV')

    div.innerHTML = `
        <div id="modal" class="fixed inset-0 bg-opacity-50 flex items-center justify-center">
            <div class="bg-white p-8 rounded-3xl shadow-2xl w-full max-w-md relative animate-fade-in">

            <!-- Título -->
            <h2 class="text-3xl font-bold text-blue-600 mb-6 border-b-2 border-blue-500 pb-2 text-center">
                Información detallada
            </h2>

            <!-- Contenido -->
            <div class="space-y-4 text-gray-700 text-sm">
                <p class="flex items-center gap-2">
                    <i class="fas fa-user text-blue-500"></i>
                    <span class="font-semibold">NOMBRE Y APELLIDO:</span> ${data[focusDataElement].name}
                </p>

                <p class="flex items-center gap-2">
                    <i class="fas fa-id-card text-blue-500"></i>
                    <span class="font-semibold">DNI:</span> ${data[focusDataElement].id}
                </p>

                <p class="flex items-center gap-2">
                    <i class="fas fa-envelope text-blue-500"></i>
                    <span class="font-semibold">EMAIL:</span> ${data[focusDataElement].email}
                </p>

                <p class="flex items-center gap-2">
                    <i class="fas fa-phone text-blue-500"></i>
                    <span class="font-semibold">TELÉFONO:</span> ${data[focusDataElement].phone}
                </p>

                <p class="flex items-center gap-2">
                    <i class="fas fa-user-circle text-blue-500"></i>
                    <span class="font-semibold">USER:</span> ${data[focusDataElement].username}
                </p>

                <p class="flex items-center gap-2">
                    <i class="fas fa-globe text-blue-500"></i>
                    <span class="font-semibold">WEB:</span> 
                    <a href="${data[focusDataElement].website}" 
                      target="_blank" 
                      class="text-blue-500 hover:underline">
                        ${data[focusDataElement].website}
                    </a>
                </p>
            </div>

            <!-- Botón de cierre -->
            <div class="flex justify-end mt-8">
                <button id="closeModal" 
                        class="bg-red-500 hover:bg-red-600 text-white font-semibold px-6 py-3 rounded-lg shadow-md transition-all duration-200">
                    Cerrar
                </button>
            </div>
        </div>
        </div>
    `
    const mainDiv = document.querySelector('#mainDiv')
    mainDiv?.appendChild(div)
  }
})

  document.querySelector('#mainDiv')?.addEventListener('click', function(e) {
      if (e.target.id === 'closeModal') {
          closeModal()
      }
  })

  function closeModal() {
      document.getElementById('modal')?.remove()  // Elimina el modal del DOM
  }

  function checkButtonDisponibility(prev,next,total){
    const prePagButton = document.querySelector('#previousPage')
    const nextPagButton = document.querySelector('#nextPage')
    if(prev === 0){
      prePagButton.classList.add('disable-button')
      prePagButton.classList.remove('hover:bg-gray-900')
    }
    else{
      prePagButton.classList.remove('disable-button')
      prePagButton.classList.add('hover:bg-gray-900')
    }

    if(next === total){
      nextPagButton.classList.add('disable-button')
      nextPagButton.classList.remove('hover:bg-gray-900')
    }
    else{
      nextPagButton.classList.remove('disable-button')
      nextPagButton.classList.add('hover:bg-gray-900')
    }

  }

  async function fetchData(){
    if(!data){
      const response = await fetch('https://jsonplaceholder.typicode.com/users')
      data = await response.json()
    }
    return data
  }

  (async function loadData(){
    let tableContent =document.querySelector('#tbody')
    if(tableContent.rows.length === 0){
      data = await fetchData()
      
      for (let i = 0; i <limitcolums; i++) {
        tableContent.innerHTML +=`<tr>
                                  <td class="border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4 text-left text-sm font-bold text-xs">${data[i].id}</td>
                                  <td class="border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4 font-bold text-xs">${data[i].name}</td>
                                  <td class="border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4 font-bold text-xs">${data[i].username}</td>
                                  <td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">
                                    <span>
                                      <button id="MoreInfo" class="mr-2 rounded-3xl bg-blue-700 py-1 px-3 rounded-3xl text-white text-xs">Más Información</button>
                                      <button class="mr-2 rounded-3xl bg-sky-400 w-6 h-6"><i class="fa-solid fa-pen-to-square" style="color: #000000;"></i></button>
                                      <button class="rounded-3xl bg-red-600 w-6 h-6"><i class="fa-solid fa-xmark" style="color: #000000;"></i></button>
                                    </span>
                                  </td>
                                </tr>`
      }
    }

    const paginationStart = document.querySelector('#paginationStart').innerHTML = 0
    const paginationEnd = document.querySelector('#paginationEnd').innerHTML = limitcolums
    const totalPagination = document.querySelector('#totalPagination').innerHTML = data.length

    checkButtonDisponibility(0,limitcolums,data.length)
  })()

  async function nexPage(){
    const paginationStart = document.querySelector('#paginationStart')
    const paginationEnd = document.querySelector('#paginationEnd')
    const totalPagination = document.querySelector('#totalPagination')
    data = await fetchData()
    let pagStartValue = parseInt(paginationStart.innerHTML) + limitcolums
    let pagEndValue = parseInt(paginationEnd.innerHTML) + limitcolums
    const totalPagValue = parseInt(totalPagination.innerHTML)

    if((pagEndValue <= totalPagValue) && (data.length !== 0) && ((pagStartValue) !== totalPagValue)){
      let tableContent = document.querySelector("#tbody")
      tableContent.innerHTML= ""
      paginationStart.innerHTML = pagStartValue
      paginationEnd.innerHTML = pagEndValue

      for (let i = pagStartValue; i < pagEndValue; i++){
        tableContent.innerHTML +=`<tr>
                                  <td class="border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4 text-left text-sm font-bold text-xs">${data[i].id}</td>
                                  <td class="border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4 font-bold text-xs">${data[i].name}</td>
                                  <td class="border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4 font-bold text-xs">${data[i].username}</td>
                                  <td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">
                                    <span>
                                      <button id="MoreInfo" class="mr-2 rounded-3xl bg-blue-700 py-1 px-3 rounded-3xl text-white text-xs">Más Información</button>
                                      <button class="mr-2 rounded-3xl bg-sky-400 w-6 h-6"><i class="fa-solid fa-pen-to-square" style="color: #000000;"></i></button>
                                      <button class="rounded-3xl bg-red-600 w-6 h-6"><i class="fa-solid fa-xmark" style="color: #000000;"></i></button>
                                    </span>
                                  </td>
                                </tr>`
      }
      checkButtonDisponibility(pagStartValue,pagEndValue,totalPagValue)
    }
  }

  async function previousPage(){
    const paginationStart = document.querySelector('#paginationStart')
    const paginationEnd = document.querySelector('#paginationEnd')
    const totalPagination = document.querySelector('#totalPagination')
    data = await fetchData()
    let pagStartValue = parseInt(paginationStart.innerHTML) - limitcolums
    let pagEndValue = parseInt(paginationEnd.innerHTML) - limitcolums
    const totalPagValue = parseInt(totalPagination.innerHTML)

    if((pagStartValue >= 0) && (data.length !== 0)){
      let tableContent = document.querySelector("#tbody")
      tableContent.innerHTML= ""
      paginationStart.innerHTML = pagStartValue
      paginationEnd.innerHTML = pagEndValue
      

      for (let i = pagStartValue; i < pagEndValue; i++){
        tableContent.innerHTML +=`<tr>
                                  <td class="border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4 text-left text-sm font-bold text-xs">${data[i].id}</td>
                                  <td class="border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4 font-bold text-xs">${data[i].name}</td>
                                  <td class="border-t-0 px-6 align-middle border-l-0 border-r-0 whitespace-nowrap p-4 font-bold text-xs">${data[i].username}</td>
                                  <td class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4">
                                    <span>
                                      <button id="MoreInfo" class="mr-2 rounded-3xl bg-blue-700 py-1 px-3 rounded-3xl text-white text-xs">Más Información</button>
                                      <button class="mr-2 rounded-3xl bg-sky-400 w-6 h-6"><i class="fa-solid fa-pen-to-square" style="color: #000000;"></i></button>
                                      <button class="rounded-3xl bg-red-600 w-6 h-6"><i class="fa-solid fa-xmark" style="color: #000000;"></i></button>
                                    </span>
                                  </td>
                                </tr>`
      }
      checkButtonDisponibility(pagStartValue,pagEndValue,totalPagValue)
    }
  }
</script>